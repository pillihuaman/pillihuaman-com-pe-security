# .github/workflows/build-and-deploy.yml
name: Build and Deploy security-app

on:
  push:
    branches:
      - main
      - master

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 614520203803.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: security-app
  IMAGE_TAG: latest
  CODEARTIFACT_DOMAIN: pillihuamanlib
  CODEARTIFACT_OWNER_ID: 614520203803

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get CodeArtifact auth token
        id: codeartifact
        run: |
          echo "TOKEN=$(aws codeartifact get-authorization-token \
            --domain $CODEARTIFACT_DOMAIN \
            --domain-owner $CODEARTIFACT_OWNER_ID \
            --region $AWS_REGION \
            --query authorizationToken --output text)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        run: |
          docker build \
            --build-arg CODEARTIFACT_AUTH_TOKEN=$TOKEN \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Prune Docker images
        run: docker image prune -f
